import streamlit as st

# Fun√ß√£o para processar notas (mesma linha, espa√ßo, v√≠rgula ou ponto e v√≠rgula)
def processar_notas(entrada):
    return [
        float(n.strip().replace(',', '.'))
        for n in entrada.replace('\n', ' ').replace(';', ' ').split()
        if n.strip()
    ]

# Crit√©rios usados para notas
nomes_criterios_aprov_reprov = [
    "Crit√©rio 1",
    "Crit√©rio 2",
    "Crit√©rio 3",
    "Crit√©rio 4"
]

# Configura√ß√£o da p√°gina
st.set_page_config(page_title="Sistema de Avalia√ß√£o", layout="wide")

tabs = st.tabs(["‚úÖ Aprova√ß√£o", "‚ùå Reprova√ß√£o", "üìä Resultado Final"])

# =========================
# Fun√ß√£o para criar as abas
# =========================
def criar_aba(tipo):
    st.subheader(f"Avalia√ß√£o - {tipo}")

    # Avaliador I
    st.markdown("### Avaliador(a) I")
    data_avaliador_i = st.text_input(f"Data Avaliador(a) I - {tipo}", value="4 de ago de 2025")
    default_notas_i_str = " ".join([str(0.0) for _ in nomes_criterios_aprov_reprov])
    notas_i_input = st.text_input(
        f"Notas Avaliador(a) I - {tipo} (mesma linha, separadas por espa√ßo, v√≠rgula ou ponto e v√≠rgula)",
        value=default_notas_i_str
    )
    notas_i_digitadas = processar_notas(notas_i_input)

    # Avaliador II
    st.markdown("### Avaliador(a) II")
    data_avaliador_ii = st.text_input(f"Data Avaliador(a) II - {tipo}", value="4 de ago de 2025")
    default_notas_ii_str = " ".join([str(0.0) for _ in nomes_criterios_aprov_reprov])
    notas_ii_input = st.text_input(
        f"Notas Avaliador(a) II - {tipo} (mesma linha, separadas por espa√ßo, v√≠rgula ou ponto e v√≠rgula)",
        value=default_notas_ii_str
    )
    notas_ii_digitadas = processar_notas(notas_ii_input)

    # Mostrar no HTML com a data √† direita
    st.markdown(f"""
    <p><strong>üë§ Avaliador(a) I</strong> <span style="float: right;">{data_avaliador_i}</span></p>
    <p>Notas: {notas_i_digitadas}</p>
    <p><strong>üë§ Avaliador(a) II</strong> <span style="float: right;">{data_avaliador_ii}</span></p>
    <p>Notas: {notas_ii_digitadas}</p>
    """, unsafe_allow_html=True)

# Criar as tr√™s abas
with tabs[0]:
    criar_aba("Aprova√ß√£o")

with tabs[1]:
    criar_aba("Reprova√ß√£o")

with tabs[2]:
    criar_aba("Resultado Final")
